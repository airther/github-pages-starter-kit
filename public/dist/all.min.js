"use strict";(function(){var e={};e.getNodes=function(){e.nav=document.querySelector(".header__nav"),e.overlay=document.querySelector(".header__overlay"),e.hamburger=document.querySelector(".header__hamburger"),e.navToggleNode=document.querySelector(".header__nav-toggle")},e.setupListeners=function(){e.navToggleNode.addEventListener("click",e.toggleNav),e.overlay.addEventListener("click",e.toggleNav)},e.toggleNav=function(){e.nav.classList.toggle("header__nav--active"),e.overlay.classList.toggle("header__overlay--active"),e.hamburger.classList.toggle("header__hamburger--active")},e.init=function(){e.getNodes(),e.setupListeners()};var t={};t.init=function(){!function(e,t,n,o,a,c,r){e.GoogleAnalyticsObject=a,e[a]=e[a]||function(){(e[a].q=e[a].q||[]).push(arguments)},e[a].l=1*new Date,c=t.createElement(n),r=t.getElementsByTagName(n)[0],c.async=1,c.src=o,r.parentNode.insertBefore(c,r)}(window,document,"script","//www.google-analytics.com/analytics.js","ga"),ga("create","UA-51091805-1","auto"),ga("send","pageview")};var n={};n.init=function(){function e(){var e=document.createElement("script");e.src="//browser-update.org/update.js",document.body.appendChild(e)}window.$buoop={c:2};try{document.addEventListener("DOMContentLoaded",e,!1)}catch(t){window.attachEvent("onload",e)}},document.addEventListener("DOMContentLoaded",function(){e.init(),t.init(),n.init(),fitIt('[src*="youtube.com"]')})}).call(void 0),function(){var e={};e.init=function(){!function(e,t,n,o,a,c,r){e.GoogleAnalyticsObject=a,e[a]=e[a]||function(){(e[a].q=e[a].q||[]).push(arguments)},e[a].l=1*new Date,c=t.createElement(n),r=t.getElementsByTagName(n)[0],c.async=1,c.src=o,r.parentNode.insertBefore(c,r)}(window,document,"script","//www.google-analytics.com/analytics.js","ga"),ga("create","UA-51091805-1","auto"),ga("send","pageview")}}.call(void 0),function(){var e={};e.init=function(){function e(){var e=document.createElement("script");e.src="//browser-update.org/update.js",document.body.appendChild(e)}window.$buoop={c:2};try{document.addEventListener("DOMContentLoaded",e,!1)}catch(t){window.attachEvent("onload",e)}}}.call(void 0),function(){var e={};e.getNodes=function(){e.nav=document.querySelector(".header__nav"),e.overlay=document.querySelector(".header__overlay"),e.hamburger=document.querySelector(".header__hamburger"),e.navToggleNode=document.querySelector(".header__nav-toggle")},e.setupListeners=function(){e.navToggleNode.addEventListener("click",e.toggleNav),e.overlay.addEventListener("click",e.toggleNav)},e.toggleNav=function(){e.nav.classList.toggle("header__nav--active"),e.overlay.classList.toggle("header__overlay--active"),e.hamburger.classList.toggle("header__hamburger--active")},e.init=function(){e.getNodes(),e.setupListeners()}}.call(void 0),function(){!function(){var e=[],t=new MutationObserver(function(t){t.forEach(function(t){t.addedNodes.length&&[].slice.call(t.addedNodes).forEach(function(t){e.forEach(function(e){n(t,e)&&a(t)})})})}),n=function(e,t){var n=["matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector"].filter(function(t){return!!e[t]})[0];return n?e[n](t):void 0},o=function(e){var t=parseFloat(e.dataset.ratio,10),n=parseInt(window.getComputedStyle(e).width,10);e.style.height=n/t+"px"},a=function(e){var t=window.getComputedStyle(e),n=parseInt(t.width,10),a=parseInt(t.height,10),c=n/a;e.dataset.ratio=c,e.style.width="100%",e.removeAttribute("width"),e.removeAttribute("height"),o(e)},c=function(t){var n=function(){return"interactive"===document.readyState||"complete"===document.readyState||"loaded"===document.readyState};e.push(t),n()?[].slice.call(document.querySelectorAll(t)).forEach(a):document.addEventListener("readystatechange",function(){n()&&[].slice.call(document.querySelectorAll(t)).forEach(a)}),window.addEventListener("resize",function(){[].slice.call(document.querySelectorAll(t)).forEach(o)})};t.observe(document.documentElement,{subtree:!0,childList:!0}),window.fitIt=c}()}.call(void 0);
//# sourceMappingURL=data:application/json;base64,