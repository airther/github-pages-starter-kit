"use strict";(function(){var e={};e.getNodes=function(){e.nav=document.querySelector(".header__nav"),e.overlay=document.querySelector(".header__overlay"),e.hamburger=document.querySelector(".header__hamburger"),e.navToggleNode=document.querySelector(".header__nav-toggle")},e.setupListeners=function(){e.navToggleNode.addEventListener("click",e.toggleNav),e.overlay.addEventListener("click",e.toggleNav)},e.toggleNav=function(){e.nav.classList.toggle("header__nav--active"),e.overlay.classList.toggle("header__overlay--active"),e.hamburger.classList.toggle("header__hamburger--active")},e.init=function(){e.getNodes(),e.setupListeners()},document.addEventListener("DOMContentLoaded",function(){e.init()})}).call(void 0),function(){var e={};e.getNodes=function(){e.nav=document.querySelector(".header__nav"),e.overlay=document.querySelector(".header__overlay"),e.hamburger=document.querySelector(".header__hamburger"),e.navToggleNode=document.querySelector(".header__nav-toggle")},e.setupListeners=function(){e.navToggleNode.addEventListener("click",e.toggleNav),e.overlay.addEventListener("click",e.toggleNav)},e.toggleNav=function(){e.nav.classList.toggle("header__nav--active"),e.overlay.classList.toggle("header__overlay--active"),e.hamburger.classList.toggle("header__hamburger--active")},e.init=function(){e.getNodes(),e.setupListeners()}}.call(void 0),function(){!function(){var e=[],t=new MutationObserver(function(t){t.forEach(function(t){t.addedNodes.length&&[].slice.call(t.addedNodes).forEach(function(t){e.forEach(function(e){o(t,e)&&n(t)})})})}),o=function(e,t){var o=["matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector"].filter(function(t){return!!e[t]})[0];return o?e[o](t):void 0},a=function(e){var t=parseFloat(e.dataset.ratio,10),o=parseInt(window.getComputedStyle(e).width,10);e.style.height=o/t+"px"},n=function(e){var t=window.getComputedStyle(e),o=parseInt(t.width,10),n=parseInt(t.height,10),r=o/n;e.dataset.ratio=r,e.style.width="100%",e.removeAttribute("width"),e.removeAttribute("height"),a(e)},r=function(t){var o=function(){return"interactive"===document.readyState||"complete"===document.readyState||"loaded"===document.readyState};e.push(t),o()?[].slice.call(document.querySelectorAll(t)).forEach(n):document.addEventListener("readystatechange",function(){o()&&[].slice.call(document.querySelectorAll(t)).forEach(n)}),window.addEventListener("resize",function(){[].slice.call(document.querySelectorAll(t)).forEach(a)})};t.observe(document.documentElement,{subtree:!0,childList:!0}),window.fitIt=r}()}.call(void 0);
//# sourceMappingURL=data:application/json;base64,